---

# VPC Create
- name:             VPC Create
  ec2_vpc_net:
    name:           "{{ vpc_name }}"
    cidr_block:     "{{ vpc_cidr_block }}"
    region:         "{{ aws_region_code }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state:          "present"
  register:         this_vpc


# VPC ID Set In Variable
- name:     VPC ID Set In Variable
  set_fact:
    vpc_id: "{{ this_vpc.vpc.id }}"


# Subnet Public Create
- name:             Subnet Public Create
  ec2_vpc_subnet:
    state:          "present"
    vpc_id:         "{{ vpc_id }}"
    cidr:           "{{ public_subnet_1_cidr }}"
    region:         "{{ aws_region_code }}"
    az:             "{{ aws_region_code }}a"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    resource_tags:
      Name:         "{{ environment_type }}-public-a"
  register:         this_subnet_public


# Subnet Public ID Set In Variable
- name:                Subnet Public ID Set In Variable
  set_fact:
    public_subnet_id: "{{ this_subnet_public.subnet.id }}"


# Subnet Private Create
- name:             Subnet Private Create
  ec2_vpc_subnet:
    state:          "present"
    vpc_id:         "{{ vpc_id }}"
    cidr:           "{{ private_subnet_1_cidr }}"
    region:         "{{ aws_region_code }}"
    az:             "{{ aws_region_code }}b"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    resource_tags:
      Name:         "{{ environment_type }}-private-b"
  register:         this_subnet_private


# Subnet Private ID Set In Variable
- name:                Subnet Private ID Set In Variable
  set_fact:
    private_subnet_id: "{{ this_subnet_private.subnet.id }}"


# IGW Create
- name:             IGW Create
  ec2_vpc_igw:
    state:          "present"
    vpc_id:         "{{ vpc_id }}"
    region:         "{{ aws_region_code }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
  register:         this_vpc_igw


# IGW ID Set In Variable
- name:     IGW ID Set In Variable
  set_fact:
    igw_id: "{{ this_vpc_igw.gateway_id }}"


# AWS CLI Setup
- name: AWS CLI Setup (1/3)
  shell: >
    aws configure set aws_access_key_id "{{ aws_access_key }}"

- name: AWS CLI Setup (2/3)
  shell: >
    aws configure set aws_secret_access_key "{{ aws_secret_key }}"

- name: AWS CLI Setup (3/3)
  shell: >
    aws configure set region {{ aws_region_code }}


# Elastic IP Create
- name: Elastic IP Create
  shell: >
    aws ec2 allocate-address \
    --domain vpc \
    --query AllocationId | tr -d '"'
  register: eip

# Debug
- debug: var=eip

# EIP Set In Variable
- name:     EIP Set In Variable
  set_fact:
    this_elastic_ip: "{{ eip.stdout }}"


# NAT Gateway Create
- name: NAT Gateway Create
  shell: >
    aws ec2 create-nat-gateway \
    --subnet-id {{ public_subnet_id }} \
    --allocation-id {{ this_elastic_ip }} \
    --query NatGateway.NatGatewayId | tr -d '"'
  register: this_nat_gateway


# NAT Gateway Set In Variable
- name:             NAT Gateway Set In Variable
  set_fact:
    nat_gateway_id: "{{ this_nat_gateway.stdout }}"


# Pause
- pause: seconds=10


# Route Table Public Subnet Create
- name:                Route Table Public Subnet Create
  ec2_vpc_route_table:
    vpc_id:            "{{ vpc_id }}"
    region:            "{{ aws_region_code }}"
    aws_access_key:    "{{ aws_access_key }}"
    aws_secret_key:    "{{ aws_secret_key }}"
    tags:
      Name:            "{{ environment_type }}-subnet-public"
    subnets:
      -                "{{ public_subnet_id }}"
    routes:
      - dest:          "{{ ip_all }}"
        gateway_id:    "{{ igw_id }}"


# Route Table Private Subnet Create
- name:                Route Table Private Subnet Create
  ec2_vpc_route_table:
    vpc_id:            "{{ vpc_id }}"
    region:            "{{ aws_region_code }}"
    aws_access_key:    "{{ aws_access_key }}"
    aws_secret_key:    "{{ aws_secret_key }}"
    tags:
      Name:            "{{ environment_type }}-subnet-private"
    subnets:
      -                "{{ public_subnet_id }}"
    routes:
      - dest:          "{{ ip_all }}"
        gateway_id:    "{{ nat_gateway_id }}"


# Subnet Public Security Group SSH Create
- name:             Subnet Public Security Group SSH Create
  ec2_group:
    name:           "{{ environment_type }}-public-ssh"
    description:    "{{ environment_name }} VPC Public Security Group SSH"
    vpc_id:         "{{ vpc_id }}"
    region:         "{{ aws_region_code }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules:
      - proto:      "tcp"
      # from_port:    "x"
      from_port:    "22"
      # from_port:    "y"
      to_port:      "22"
      cidr_ip:      "{{ ip_all }}"
  register:         this_subnet_public_sg


# Subnet Public Security Group SSH Set In Variable
- name:                       Subnet Public Security Group SSH Set In Variable
  set_fact:
    this_subnet_public_sg_id: "{{ this_subnet_public_sg.group_id }}"


# Private Subnet Security Group SSH Create
- name: Private Subnet Security Group SSH Create
  ec2_group:
    name:           "{{ environment_type }}-private-ssh"
    description:    "{{ environment_name }} VPC Private Security Group SSH"
    vpc_id:         "{{ vpc_id }}"
    region:         "{{ aws_region_code }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules:
      - proto:      "tcp"
      # from_port:    "x"
      from_port:    "22"
      # from_port:    "y"
      to_port:      "22"
      group_id:     "{{ this_subnet_public_sg_id }}"


...